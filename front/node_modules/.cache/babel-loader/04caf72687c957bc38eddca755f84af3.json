{"ast":null,"code":"var _jsxFileName = \"/Users/leandrosimoes/Documents/Trabalho/prova/contele/front/src/components/GoogleMap.js\";\nimport React, { useState } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport useClustersWithBounds from '../api/ClusterAPI';\nimport './GoogleMap.css';\n\nconst Marker = ({\n  children\n}) => children;\n\nexport default function GoogleMap() {\n  const onChange = ({\n    zoom,\n    bounds\n  }) => {\n    setZoom(zoom);\n    setBounds({\n      nw: {\n        lng: bounds.nw.lng,\n        lat: bounds.nw.lat\n      },\n      se: {\n        lng: bounds.ne.lng,\n        lat: bounds.ne.lat\n      }\n    });\n  };\n\n  const mapRef = useState();\n  const [zoom, setZoom] = useState(10);\n  const [bounds, setBounds] = useState({\n    nw: {\n      lng: -46.6357351149081,\n      lat: -23.194985793907847\n    },\n    se: {\n      lat: -23.927602731919876,\n      lng: -45.785667976236226\n    }\n  });\n  const markers = useClustersWithBounds({\n    zoom,\n    bounds\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"100vh\",\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMapReact, {\n    bootstrapURLKeys: {\n      key: process.env.GOOGLE_API\n    },\n    defaultCenter: {\n      lat: -23.31509536897015,\n      lng: -46.57099951314362\n    },\n    defaultZoom: 10,\n    distanceToMouse: () => {},\n    yesIWantToUseGoogleMapApiInternals: true,\n    onGoogleApiLoaded: ({\n      map\n    }) => {\n      mapRef.current = map;\n    },\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, markers.map((marker, index) => {\n    const {\n      cluster: isCluster,\n      point_count: pointCount\n    } = marker.properties;\n\n    if (isCluster) {\n      return /*#__PURE__*/React.createElement(Marker, {\n        key: index,\n        lat: marker.geometry.coordinates[1],\n        lng: marker.geometry.coordinates[0],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cluster\",\n        style: {\n          width: `${10 + pointCount / 200 * 20}px`,\n          height: `${10 + pointCount / 200 * 20}px`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      }, pointCount));\n    }\n\n    return /*#__PURE__*/React.createElement(Marker, {\n      key: index,\n      lat: marker.geometry.coordinates[1],\n      lng: marker.geometry.coordinates[0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"marker\",\n      style: {\n        width: `20px`,\n        height: `20px`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, marker.properties.name));\n  })));\n}","map":{"version":3,"sources":["/Users/leandrosimoes/Documents/Trabalho/prova/contele/front/src/components/GoogleMap.js"],"names":["React","useState","GoogleMapReact","useClustersWithBounds","Marker","children","GoogleMap","onChange","zoom","bounds","setZoom","setBounds","nw","lng","lat","se","ne","mapRef","markers","height","width","key","process","env","GOOGLE_API","map","current","marker","index","cluster","isCluster","point_count","pointCount","properties","geometry","coordinates","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,qBAAP,MAAkC,mBAAlC;AACA,OAAO,iBAAP;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkBA,QAAjC;;AAEA,eAAe,SAASC,SAAT,GAAsB;AAEnC,QAAMC,QAAQ,GAAG,CAAC;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAD,KAAoB;AACnCC,IAAAA,OAAO,CAACF,IAAD,CAAP;AACAG,IAAAA,SAAS,CAAC;AACRC,MAAAA,EAAE,EAAE;AACFC,QAAAA,GAAG,EAAEJ,MAAM,CAACG,EAAP,CAAUC,GADb;AAEFC,QAAAA,GAAG,EAAEL,MAAM,CAACG,EAAP,CAAUE;AAFb,OADI;AAKRC,MAAAA,EAAE,EAAE;AACFF,QAAAA,GAAG,EAAEJ,MAAM,CAACO,EAAP,CAAUH,GADb;AAEFC,QAAAA,GAAG,EAAEL,MAAM,CAACO,EAAP,CAAUF;AAFb;AALI,KAAD,CAAT;AAUD,GAZD;;AAcA,QAAMG,MAAM,GAAGhB,QAAQ,EAAvB;AACA,QAAM,CAACO,IAAD,EAAOE,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,MAAD,EAASE,SAAT,IAAsBV,QAAQ,CAAC;AACnCW,IAAAA,EAAE,EAAE;AACFC,MAAAA,GAAG,EAAE,CAAC,gBADJ;AAEFC,MAAAA,GAAG,EAAE,CAAC;AAFJ,KAD+B;AAKnCC,IAAAA,EAAE,EAAE;AACFD,MAAAA,GAAG,EAAE,CAAC,kBADJ;AAEFD,MAAAA,GAAG,EAAE,CAAC;AAFJ;AAL+B,GAAD,CAApC;AAWA,QAAMK,OAAO,GAAGf,qBAAqB,CAAC;AACpCK,IAAAA,IADoC;AAEpCC,IAAAA;AAFoC,GAAD,CAArC;AAIA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEU,MAAAA,MAAM,EAAE,OAAV;AAAmBC,MAAAA,KAAK,EAAE;AAA1B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AACE,IAAA,gBAAgB,EAAE;AAACC,MAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC;AAAlB,KADpB;AAEE,IAAA,aAAa,EAAE;AAAEV,MAAAA,GAAG,EAAE,CAAC,iBAAR;AAA2BD,MAAAA,GAAG,EAAE,CAAC;AAAjC,KAFjB;AAGE,IAAA,WAAW,EAAE,EAHf;AAIE,IAAA,eAAe,EAAE,MAAI,CAAE,CAJzB;AAKE,IAAA,kCAAkC,MALpC;AAME,IAAA,iBAAiB,EAAE,CAAC;AAAEY,MAAAA;AAAF,KAAD,KAAa;AAC9BR,MAAAA,MAAM,CAACS,OAAP,GAAiBD,GAAjB;AACD,KARH;AASE,IAAA,QAAQ,EAAElB,QATZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWIW,OAAO,CAACO,GAAR,CAAY,CAACE,MAAD,EAASC,KAAT,KAAmB;AAC/B,UAAM;AACJC,MAAAA,OAAO,EAAEC,SADL;AAEJC,MAAAA,WAAW,EAAEC;AAFT,QAGFL,MAAM,CAACM,UAHX;;AAKA,QAAIH,SAAJ,EAAe;AACb,0BACE,oBAAC,MAAD;AACA,QAAA,GAAG,EAAEF,KADL;AAEA,QAAA,GAAG,EAAED,MAAM,CAACO,QAAP,CAAgBC,WAAhB,CAA4B,CAA5B,CAFL;AAGA,QAAA,GAAG,EAAER,MAAM,CAACO,QAAP,CAAgBC,WAAhB,CAA4B,CAA5B,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKE;AACE,QAAA,SAAS,EAAC,SADZ;AAEE,QAAA,KAAK,EAAE;AACLf,UAAAA,KAAK,EAAG,GAAE,KAAMY,UAAU,GAAG,GAAd,GAAqB,EAAG,IADlC;AAELb,UAAAA,MAAM,EAAG,GAAE,KAAMa,UAAU,GAAG,GAAd,GAAqB,EAAG;AAFnC,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOGA,UAPH,CALF,CADF;AAiBD;;AACD,wBACI,oBAAC,MAAD;AACA,MAAA,GAAG,EAAEJ,KADL;AAEA,MAAA,GAAG,EAAED,MAAM,CAACO,QAAP,CAAgBC,WAAhB,CAA4B,CAA5B,CAFL;AAGA,MAAA,GAAG,EAAER,MAAM,CAACO,QAAP,CAAgBC,WAAhB,CAA4B,CAA5B,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,KAAK,EAAE;AACLf,QAAAA,KAAK,EAAG,MADH;AAELD,QAAAA,MAAM,EAAG;AAFJ,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGQ,MAAM,CAACM,UAAP,CAAkBG,IAPrB,CALF,CADJ;AAiBD,GA1CC,CAXJ,CADF,CADF;AA2DD","sourcesContent":["import React, { useState} from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport useClustersWithBounds from '../api/ClusterAPI';\nimport './GoogleMap.css';\n\nconst Marker = ({ children }) => children;\n\nexport default function GoogleMap()  {\n\n  const onChange = ({zoom, bounds}) => {\n    setZoom(zoom);\n    setBounds({\n      nw: {\n        lng: bounds.nw.lng,\n        lat: bounds.nw.lat,\n      },\n      se: {\n        lng: bounds.ne.lng,\n        lat: bounds.ne.lat\n      }\n    })\n  }\n\n  const mapRef = useState();\n  const [zoom, setZoom] = useState(10);\n  const [bounds, setBounds] = useState({\n    nw: {\n      lng: -46.6357351149081,\n      lat: -23.194985793907847\n    }, \n    se: {\n      lat: -23.927602731919876,\n      lng: -45.785667976236226\n    }\n  })\n  \n  const markers = useClustersWithBounds({\n    zoom,\n    bounds,\n  })\n  return (\n    <div style={{ height: \"100vh\", width: \"100%\" }}>\n      <GoogleMapReact \n        bootstrapURLKeys={{key: process.env.GOOGLE_API}}\n        defaultCenter={{ lat: -23.31509536897015, lng: -46.57099951314362 }}\n        defaultZoom={10}\n        distanceToMouse={()=>{}}\n        yesIWantToUseGoogleMapApiInternals\n        onGoogleApiLoaded={({ map }) => {\n          mapRef.current = map;\n        }}\n        onChange={onChange}\n      >\n        { markers.map((marker, index) => {\n          const {\n            cluster: isCluster,\n            point_count: pointCount,\n          } = marker.properties;\n\n          if (isCluster) {\n            return (\n              <Marker \n              key={index}\n              lat={marker.geometry.coordinates[1]}\n              lng={marker.geometry.coordinates[0]}\n              >\n                <div\n                  className=\"cluster\"\n                  style={{\n                    width: `${10 + (pointCount / 200) * 20}px`,\n                    height: `${10 + (pointCount / 200) * 20}px`\n                  }}\n                >\n                  {pointCount}\n                </div>\n            </Marker>\n            )\n          }\n          return (\n              <Marker \n              key={index}\n              lat={marker.geometry.coordinates[1]}\n              lng={marker.geometry.coordinates[0]}\n              >\n                <div\n                  className=\"marker\"\n                  style={{\n                    width: `20px`,\n                    height: `20px`\n                  }}\n                >\n                  {marker.properties.name}\n                </div>\n            </Marker>\n            )\n        })}\n      </GoogleMapReact>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}